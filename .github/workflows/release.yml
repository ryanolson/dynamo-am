name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  id-token: write

jobs:
  ci:
    uses: ./.github/workflows/ci.yml

  copyright:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Run copyright check
        run: pwsh .github/workflows/copyright-check.ps1
        timeout-minutes: 2

  validate-version:
    name: Validate Version Match
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Check version matches tag
        run: |
          TAG=${GITHUB_REF#refs/tags/v}
          CARGO_VERSION=$(cargo metadata --no-deps --format-version 1 | jq -r '.packages[0].version')
          echo "Git tag version: $TAG"
          echo "Cargo.toml version: $CARGO_VERSION"
          if [ "$TAG" != "$CARGO_VERSION" ]; then
            echo "ERROR: Tag version ($TAG) does not match Cargo.toml version ($CARGO_VERSION)"
            exit 1
          fi
          echo "âœ“ Versions match"

  publish:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    needs: [ci, copyright, validate-version]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: rust-lang/crates-io-auth-action@v1
      - name: Publish
        run: cargo publish

  github-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [publish]
    steps:
      - uses: actions/checkout@v4
      - name: Create Release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          gh release create "$TAG" \
            --title "$TAG" \
            --notes "Release $TAG"
